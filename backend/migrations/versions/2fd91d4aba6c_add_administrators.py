"""Add administrators

Revision ID: 2fd91d4aba6c
Revises: b2cfada3abcd
Create Date: 2019-11-27 10:33:27.268907

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2fd91d4aba6c'
down_revision = 'b2cfada3abcd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_table('Administrators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_platform_admin', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('EventAdministrators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('administrator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['administrator_id'], ['Administrators.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['Events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'administrator_id', name='event_administrator_event_administrator_uc')
    )
    op.create_table('RoleAssociations',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('event_administrator_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_administrator_id'], ['EventAdministrators.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['Events.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['Roles.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'event_administrator_id', 'role_id'),
    sa.UniqueConstraint('event_id', 'event_administrator_id', 'role_id', name='role_association_event_administrator_role_uc')
    )
    op.create_unique_constraint(None, 'Participants', ['user_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'Participants', type_='unique')
    op.drop_table('RoleAssociations')
    op.drop_table('EventAdministrators')
    op.drop_table('Administrators')
    op.drop_table('Roles')
    # ### end Alembic commands ###
